* Packages
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (defvar my-packages '(;; Put packages here...
			ir-black-theme
			auto-complete
			geiser
			magit
			bongo
			volume
			elfeed
			elfeed-org
			helm-pass
			paredit
			dictionary
			org-bullets
			lsp-mode
			company
			lsp-treemacs
			cider
			clojure-mode
			flycheck
			))
  (dolist (p my-packages)
    (when (not (package-installed-p p))
      (package-install p)))
#+END_SRC
* Modes
** Auto-complete mode
#+begin_src emacs-lisp
  (require 'auto-complete)
  (add-hook 'org-mode-hook 'auto-complete-mode)
  (global-auto-complete-mode t)
#+end_src
** Paredit mode
#+begin_src emacs-lisp
  (require 'paredit)
  (paredit-mode t)
  ;; hooks
  (add-hook 'org-mode-hook 'paredit-mode)
  (add-hook 'clojure-mode-hook 'paredit-mode)
  (add-hook 'clojurescript-mode-hook 'paredit-mode)
  (add-hook 'clojurec-mode-hook 'paredit-mode)
  (paredit-mode t)
#+end_src
** Lsp
#+begin_src emacs-lisp
  (add-hook 'clojure-mode-hook 'lsp)
  (add-hook 'clojurescript-mode-hook 'lsp)
  (add-hook 'clojurec-mode-hook 'lsp)
#+end_src
** Company
#+begin_src emacs-lisp
  (setq company-minimum-prefix-length 1
	company-idle-delay 0.0)
#+end_src
* Elfeed
#+begin_src emacs-lisp

  ;; Load elfeed-org
  (require 'elfeed-org)

  ;; Initialize elfeed-org
  ;; This hooks up elfeed-org to read the configuration when elfeed
  ;; is started with =M-x elfeed=
  (elfeed-org)

  ;; Elfeed source
  (setq
   rmh-elfeed-org-files
   (list "~/.emacs.d/elfeed.org"))

#+end_src
* Bars on/off
#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (setq inhibit-startup-screen t)
#+END_SRC
* Aspect
#+BEGIN_SRC emacs-lisp

  ;; clock
  (display-time-mode)

  ;; font 
  (set-face-attribute
   'default nil
   :font "Liberation Mono-16")

  ;; Highlight matching parantheses
  (show-paren-mode 1)

  ;; Set custom theme path
  (setq custom-theme-directory
	(concat user-emacs-directory "themes"))
  (dolist
      (path
       (directory-files custom-theme-directory t "\\w+"))
    (when (file-directory-p path)
      (add-to-list 'custom-theme-load-path path)))

  ;; Theme load
  (load-theme 'gbrl-black t)

  ;; Org fancy bullets
  (require 'org-bullets)
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))

#+END_SRC
